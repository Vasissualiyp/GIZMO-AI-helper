import re
import openai

def extract_relevant_docs(parameters, documentation_path):
    """
    Extract the relevant documentation parts for the given parameters.
    This function attempts to get the primary description of each parameter from the documentation.
    """
    with open(documentation_path, 'r') as doc_file:
        doc_content = doc_file.read()

    param_docs = {}
    
    # Define a list of common parameter endings to help refine the extraction
    common_endings = [
        r"\n\n", r"\n%", r"\n#", r"\n[^\n]*\s{2,}[A-Z]", r"\n[^\n]*\s{2,}[0-9]", r"\n[^\n]*\s{2,}[a-z]",
        r"\.\s", r"\;\s", r"\!\s"
    ]

    for param in parameters:
        # Escape any special characters in the parameter name
        escaped_param = re.escape(param.split("=")[0].strip())
        
        # Construct a search pattern to better match parameters with minimal descriptions
        # or those mentioned in list formats
        pattern = r"(" + escaped_param + r"\s{0,5}[:\(\)].*?)(?=" + "|".join(common_endings) + r"|\n" + escaped_param + r")"
        
        # Search for the pattern in the documentation
        search_result = re.search(pattern, doc_content, re.IGNORECASE | re.MULTILINE | re.DOTALL)
        
        if search_result:
            # Store the found snippet and clean it up (removing multiple spaces, etc.)
            snippet = search_result.group(0).strip()
            snippet = re.sub(r'\s+', ' ', snippet)
            param_docs[param] = snippet
        else:
            param_docs[param] = "Not Found in Documentation"

    return param_docs

# List of parameters you want to check
params_to_check = [
    'TimeBegin', 'TimeMax', 'OPENMP', 'BOX_BND_PARTICLES', 'EOS_TRUELOVE_PRESSURE', 'GRAIN_LORENTZFORCE',
    'DM_SIDM', 'BH_PHOTONMOMENTUM', 'CosmicRayDiffusionCoeff', 'FactorSN', 'MaxRMSDisplacementFac', 
    'TabulatedCosmologyFile', 'TurbDrive_TimeBetTurbSpectrum', 'Softening_Type5', 'Effective_Kernel_NeighborNumber',
    'Maximum_Timestep_Allowed', 'MERGESPLIT_HARDCODE_MIN_MASS', 'OUTPUT_TURB_DIFF_DYNAMIC_ERROR', 'RT_SOURCES', 'HYDRO_MESHLESS_FINITE_MASS'
]

# Extracting documentation snippets for the mentioned parameters
extracted_docs = extract_relevant_docs(params_to_check, "GIZMO_Documentation.txt")

print(extracted_docs)
